# Introducci√≥n a las Redes de Ordenadores
## Introducci√≥n

La etimolog√≠a de Internet es "Interconnected Networks" (Redes interconectadas), lo cual nos da una pista sobre qu√© es: una red global interconectada de redes m√°s peque√±as que permite la comunicaci√≥n entre los diferentes dispositivos conectados. Internet opera como un sistema descentralizado compuesto por varias capas de redes, desde las \acr{LAN}, que son los nodos donde nos conectamos, hasta las \acr{WAN} que abarcan continentes. 

::: {#fig-ni-intro-network}
```{mermaid}
%%| fig-width: 5s
graph TD
    PAN["üì± PAN (Personal Area Network)<br>Smartphone ‚Üî Smartwatch"]
    LAN["üè† LAN (Local Area Network)<br>Home/Office/Building Network"]
    WLAN["üì° WLAN (Wireless LAN)<br>Wi-Fi Implementation of LAN"]
    CAN["üè´ CAN (Campus Area Network)<br>Multiple LANs in Campus"]
    MAN_ISP["üèôÔ∏è MAN (Metropolitan Area Network)<br>ISP Network"]
    MAN_MOBILE["üì∂ MAN (Metropolitan Area Network)<br>5G/4G Mobile Network"]
    WAN["üåç WAN (Wide Area Network)<br>Between Cities or Countries"]
    INTERNET["üåê Internet<br>Global Interconnected WANs"]
    VPN["üîê VPN (Virtual Private Network)<br>Secure Tunnel over Internet"]
    
    %% Traditional wired path
    PAN --> LAN
    WLAN -.-> LAN
    LAN -->|Multiple LANs| CAN
    CAN --> MAN_ISP
    LAN -->|Multiple LANs| MAN_ISP
    
    %% Mobile path
    PAN --> MAN_MOBILE
    
    %% Both MANs connect to WAN
    MAN_ISP -->|Multiple MANs| WAN
    MAN_MOBILE -->|Multiple MANs| WAN
    WAN -->|Multiple WANs| INTERNET
    VPN --> INTERNET
    
    style WLAN fill:#e1f5fe
    style VPN fill:#f3e5f5
    style MAN_MOBILE fill:#fff3e0
```
Topolog√≠a jer√°rquica de Internet.
:::


En la @fig-ni-intro-network podemos ver una organizaci√≥n jer√°rquica de Internet, donde m√∫ltiples redes del mismo nivel se agregan para formar el siguiente nivel superior. A medida que ascendemos en la jerarqu√≠a, el n√∫mero de dispositivos que se pueden conectar se incrementa exponencialmente. Las PAN son redes que conectan dispositivos personales como smartphones y sirven para conectar con smartwatches y electrodom√©sticos, entre otros. Desde las PAN podemos tomar dos rutas principales hasta el Internet, a trav√©s de las LAN o directamente con las MAN (5g o 4g). Las LAN son redes que cubren hogares, oficinas u otras unidades donde el n√∫mero de dispositivos es reducido. La conexi√≥n a las LAN puede ser cableada o inal√°mbrica, por ejemplo con WLAN (Wi-Fi). Una CAN es una agrupaci√≥n de redes LAN, generalmente en campus universitarios o grandes empresas donde el n√∫mero de dispositivos es elevado. Las redes CAN, LANs individuales y las redes de telefon√≠a m√≥vil (e.g, 4G/5G) se juntan para dar lugar a las MAN. Las MAN generalmente abarcan ciudades o grupos de ciudades, que interconectadas dan lugar a las WANs. Finalmente, m√∫ltiples WANs dan lugar al Internet global. Las VPN (Virtual Private Network) operan como t√∫neles seguros sobre toda esta infraestructura, permitiendo que los dispositivos cambien din√°micamente entre rutas seg√∫n la tecnolog√≠a disponible en cada momento.


Para ilustrar el funcionamiento de Internet vamos a utilizar un ejemplo simplificado. Supongamos que Mar√≠a quiere enviar un mensaje desde un Smartphone conectado a Internet a trav√©s del WiFi de su casa en Madrid a Takeshi, conectado a una LAN en la universidad de Tokio (dentro de una CAN). Puede que algunos t√©rminos no os suenen, no os preocup√©is, los iremos viendo a lo largo de la asignatura. El proceso de env√≠o ser√≠a el siguiente:

- **1. Origen - LAN Madrid**: El smartphone de Mar√≠a crea el paquete (pod√©is pensar en el como un mensaje) con la direcci√≥n IP de destino de Tokio y la direcci√≥n MAC del router WiFi como destino inmediato. El router WiFi recibe el frame Ethernet, examina la direcci√≥n IP de destino y se da cuenta de que no pertenece a su red local. Reemplaza la direcci√≥n MAC de destino por la de su gateway (ISP) y reenv√≠a el paquete.

- **2. Router local a MAN**: El router del ISP local recibe el frame con su propia direcci√≥n MAC como destino. Extrae el paquete IP, examina la direcci√≥n IP de destino y determina que debe enviarlo hacia la MAN de Madrid. Encapsula el paquete en un nuevo frame con la direcci√≥n MAC del siguiente router como destino.

- **3. MAN a WAN nacional**: El router de la MAN de Madrid recibe el frame dirigido a su direcci√≥n MAC, extrae el paquete IP y analiza el destino. Al comprender que Tokio est√° fuera de Espa√±a, encapsula el paquete en un nuevo frame con la direcci√≥n MAC del router de la WAN espa√±ola como destino.

- **4. WAN a Internet global**: El router de la WAN espa√±ola recibe el frame con su direcci√≥n MAC, consulta sus tablas de rutas internacionales para Jap√≥n y encapsula el paquete con la direcci√≥n MAC del siguiente router en la ruta internacional. En cada salto a trav√©s del backbone de Internet, los routers intercambian las direcciones MAC (origen y destino) mientras preservan las direcciones IP originales.

- **5. Llegada a Jap√≥n - WAN a MAN**: Un router de la WAN japonesa recibe el frame dirigido a su direcci√≥n MAC, reconoce que el destino IP est√° dentro de Jap√≥n y encapsula el paquete con la direcci√≥n MAC del router de la MAN de Tokio como nuevo destino.

- **6. MAN a CAN**: El router de la MAN de Tokio recibe el frame con su direcci√≥n MAC como destino, examina la IP y determina que pertenece a la universidad de Tokio. Encapsula el paquete en un nuevo frame dirigido a la direcci√≥n MAC del router gateway de la CAN universitaria.

- **7. CAN a LAN destino**: El router de la CAN universitaria recibe el frame dirigido a su direcci√≥n MAC, analiza la IP de destino para identificar qu√© LAN espec√≠fica del campus corresponde, y encapsula el paquete con la direcci√≥n MAC del router de esa LAN como destino.

- **8. Destino final - LAN universitaria**: El router de la LAN recibe el frame con su direcci√≥n MAC como destino, extrae el paquete IP y lo entrega al switch. El switch examina sus tablas ARP para encontrar la direcci√≥n MAC correspondiente a la IP de Takeshi, y finalmente env√≠a el frame con la direcci√≥n MAC real de Takeshi como destino, completando el viaje desde Madrid.

En este ejemplo simplificado de env√≠o de un mensaje por Internet ya estamos dispuestos para comprender algunos de sus componentes y identificadores. Si os fij√°is, hay dos componentes que est√°n presentes a lo largo del ejemplo, los switches y routers. El router es un dispositivo que conecta diferentes redes entre s√≠ usando direcciones IP. Es como un "director de tr√°fico" que conoce las rutas entre redes distantes. Su funcionamiento a grandes rasgos es el siguiente: Llega un paquete, se identifica a trav√©s de la IP destino el camino de salida obteniendo la MAC del siguiente salto (`hop`), y se env√≠a el paquete. Este proceso, denominado enrutamiento [^enrutamiento], se repite hasta llegar a la red destino, por eso estos algoritmos, y por ello se determinan `hop by hop`. El switch por otra parte es un dispositivo que conecta equipos dentro de una misma red local usando direcciones MAC. Funciona como un "repartidor inteligente" que conoce exactamente d√≥nde est√° cada dispositivo en su red. Completando la analog√≠a, Los switches manejan el tr√°fico local, mientras que cuando necesitan enviar datos fuera de su red, los entregan a los routers. Los routers, a su vez, se conectan a otros routers o switches seg√∫n el destino. 

[^enrutamiento]: *Enrutamiento* es una adaptaci√≥n al espa√±ol del t√©rmino ingl√©s *routing*. Aunque no est√° reconocida oficialmente por la RAE (2025) y el t√©rmino normativo ser√≠a *encaminamiento*, en estos apuntes se utilizar√° *enrutamiento* por ser la forma m√°s habitual en el √°mbito de las redes y telecomunicaciones.


El procedimiento de env√≠o se realiza con dos identificadores que hemos mencionado durante el ejemplo, la MAC y la direcci√≥n IP. La direcci√≥n IP funciona como la direcci√≥n postal de una casa y permite localizar el dispositivo en las redes (como 192.168.1.100), y la direcci√≥n MAC, que es como el DNI del dispositivo: √∫nico, asignado por el fabricante y que no cambia nunca. Los routers usan direcciones IP para decidir hacia d√≥nde enviar los paquetes, mientras que los switches usan direcciones MAC para entregar los datos al dispositivo correcto dentro de la red local. Por √∫ltimo, tenemos ARP, un protocolo que nos permite relacionarlas. El protocolo ARP es como un servicio de directorio telef√≥nico: cuando un dispositivo conoce la "direcci√≥n postal" (IP) pero necesita el "DNI" (MAC) para hacer la entrega final, env√≠a una consulta ARP preguntando "¬øqui√©n vive en esta direcci√≥n?". El dispositivo correspondiente responde con su MAC, permitiendo que la comunicaci√≥n se complete. ARP traduce entre el mundo de las direcciones (IP) y el mundo de las identidades f√≠sicas (MAC).

<!-- PONER UNA IMAGEN AQU√ç -->
Una vez vistos los componentes principales de Internet, vamos a realizar unas observaciones. Primero, Internet es un sistema distribuido. Esto quiere decir que es una uni√≥n de dispositivos que operan juntos con el fin de ofrecer una funcionalidad. Segundo, Internet tiene una arquitectura descentralizada[^internet_hibrido]. Por lo tanto, la ca√≠da de alguna parte de Internet no tiene porque implicar la ca√≠da de Internet globalmente. Tercero, la ejecuci√≥n de los procesos de enrutamiento es local. Cada nodo de la red s√≥lo necesita saber cual va a ser el siguiente destino ("hop"). Es decir, no hay una planificaci√≥n global para el env√≠o de los paquetes. Debido a esto los algoritmos de enrutamiento normalmente se denominan "hop by hop" e incorporan informaci√≥n de tiempo real [^internet_dynamic], por lo que dos mensajes enviados al mismo destino no tienen por que seguir la misma ruta.  Todo esto facilita la escalabilidad del sistema, disminuye la congesti√≥n de la red y adem√°s proporciona resiliencia a fallos.

[^internet_hibrido]: Algunos componentes de Internet tienen una arquitectura h√≠brida, c√≥mo los ISPs grandes y DNS.
[^internet_dynamic]: Los routers comparten y propagan informaci√≥n de congesti√≥n y destinos disponibles con los routers adyacentes.

Hasta ahora hemos visto un ejemplo simplificado de env√≠o de mensaje, los principales componentes de internet y algunos conceptos t√©cnicos. Pero a√∫n falta algo. Hemos dicho que Internet es un sistema distribuido formado por redes interconectadas. Pero, ¬øC√≥mo se entienden entre s√≠?. La respuesta son los protocolos. Un protocolo es una serie de pasos bien definidas que se realizan con un objetivo. En redes de computadores, es como un manual de instrucciones que especifica c√≥mo dos dispositivos deben intercambiar informaci√≥n. Es un conjunto de reglas que define exactamente c√≥mo deben estructurarse los mensajes, en qu√© orden enviarlos, que estructura y formato tienen los mensajes que recibimos, y c√≥mo se debe actuar. Internet funciona gracias a una familia de protocolos organizados en capas, que veremos en el @intro-network-stacks.

Por ejemplificarlo los protocolos de red con una analog√≠a, son como las reglas de tr√°fico en una ciudad: as√≠ como los autos necesitan sem√°foros, se√±ales y carriles para circular ordenadamente sin chocar, los datos en una red necesitan protocolos que definan c√≥mo moverse, comunicarse y llegar a su destino correctamente. Sin estas reglas, tanto el tr√°fico vehicular como el flujo de datos ser√≠an un caos total, con "accidentes" y p√©rdida de informaci√≥n constante. Desde un punto de vista m√°s formal, podr√≠amos definir un protocolo como:

::: {.callout-tip}
# Protocolo
Un protocolo define una serie de tipos de mensaje, su sint√°xis y su sem√°ntica, as√≠ como las reglas de cu√°ndo y c√≥mo enviar/responder los mensajes.
:::

En los siguientes apartados vamos a profundizar en los conceptos introducidos hasta ahora, obteniendo un mejor entendimiento de c√≥mo funciona Internet, cuales son los principales actores involucrados, y c√≥mo podemos realizar nuestras propias aplicaciones que funcionen sobre la red. Los puntos se abordar√°n de la siguiente manera. Primero, se ver√°n desde un enfoque "inform√°tico", y despu√©s contextualizaremos como encaja cada uno de los puntos desde el punto de vista de desarrollo de videojuegos.


## La Historia de Internet
Internet, como otros muchos avances de la sociedad, naci√≥ como una necesidad de guerra. En concreto, en la Guerra Fr√≠a. En una guerra la informaci√≥n y poder comunicarla es poder. El objetivo inicial del germen de Internet, llamado ARPANET, era precisamente la comunicaci√≥n de informaci√≥n y que estos medios fuesen capaces de sobrevivir a un ataque nuclear. En 1969 la red experimental contaba con 4 host: UCLA, Stanford, UC Santa B√°rbara y la Universidad de Utah. Esta red utilizaba un mecanismo para la comunicaci√≥n de informaci√≥n llamada conmutaci√≥n de paquetes, donde los mensajes se divid√≠an en paquetes m√°s peque√±os que pod√≠an tomar diferentes rutas hasta llegar a su destino. As√≠ cumplieron los requisitos de tolerancia a fallos en el env√≠o de informaci√≥n a trav√©s de la descentralizaci√≥n y duplicidad, y adem√°s sentaron la semilla que permitir√≠a una escalabilidad natural. En 1971 ya contaba con 23 host (ver @fig-ni-history-1971), y en 1973 se realiz√≥ la primera conexi√≥n internacional con Noruega y Londres a trav√©s de tecnolog√≠a satelital. En esa √©poca la red se incrementaba a raz√≥n de 1 host cada aproximadamente 20 d√≠as.

![Distribuci√≥n geogr√°fica de los nodos de ARPANET en 1971¬†[@bbc_ethernet1971].](resources/1971_nodes.png){#fig-ni-history-1971}

En la d√©cada de los 80 ocurrir√≠an 4 eventos que dar√≠an forma al Internet que conocemos hoy en d√≠a. En primer lugar, en 1983 se adopt√≥ oficialmente la pila de protocolos TCP/IP como est√°ndar para ARPANET, que estableci√≥ las reglas de comunicaci√≥n que a√∫n seguimos hoy en d√≠a. Una de las grandes ventajas de TCP/IP fue que permiti√≥ que diferentes tipos de redes se pudiesen comunicar entre s√≠ de manera est√°ndar. Es decir, empezamos a tener redes formadas por redes interconectadas. En este momento fue cuando se empez√≥ a hablar del t√©rmino "Internet" para describir esta red de redes interconectadas. En segundo lugar, ARPANET se dividi√≥ en 1983, cre√°ndose MILNET como una red independiente para fines militares, mientras ARPANET continu√≥ creciendo en su uso acad√©mico. En tercer lugar, el CERN empez√≥ a interconectar sus ordenadores utilizando TCP/IP, sentando la base para el √∫ltimo evento. En cuarto y √∫ltimo lugar, Tim Berners-Lee, trabajando en el CERN, invent√≥ la World Wide Web en 1989-1990. Propuso un sistema de intercambio de informaci√≥n basado en hipertexto as√≠ como las direcciones URL, el protocolo HTTP y el lenguaje HTML, que son omnipresentes hoy en d√≠a.

Los a√±os 90 fueron testigos de la transformaci√≥n de Internet de un proyecto acad√©mico a una infraestructura comercial global. El tr√°fico de ARPANET fue absorbido por Internet y se desmantel√≥ en 1990. En 1991, la World Wide Web fue anunciada p√∫blicamente cuando Tim Berners-Lee public√≥ el primer sitio web. Ese mismo a√±o se cre√≥ el primer navegador web gr√°fico, Mosaic, desarrollado en la Universidad de Illinois en 1993, que revolucion√≥ la experiencia de usuario al permitir la visualizaci√≥n de im√°genes junto con texto. La eliminaci√≥n de las restricciones comerciales sobre el uso de Internet por parte de la National Science Foundation en 1995 marc√≥ un punto de inflexi√≥n crucial. Comenzaron a aparecer los primeros proveedores comerciales de servicios de Internet (ISP) como America Online (AOL), que llev√≥ Internet a millones de hogares. Las empresas empezaron a ver el potencial no solo como un medio de comunicaci√≥n, sino como una plataforma de negocio, surgiendo los primeros sitios de comercio electr√≥nico como Amazon (1995) y eBay (1995). Yahoo! se estableci√≥ como uno de los primeros directorios web populares, mientras que motores de b√∫squeda como AltaVista comenzaron a indexar la creciente web. A finales de la d√©cada, Google fue fundado en 1998, revolucionando la b√∫squeda en Internet. Finalmente, se complet√≥ la transici√≥n de Internet de un proyecto gubernamental y acad√©mico a una infraestructura comercial global.

El cambio de milenio trajo la adopci√≥n masiva de Internet, inicialmente centrada en la conectividad de banda ancha en hogares y oficinas. La llamada "burbuja de las punto-com" explot√≥ en 2000-2001, pero esto no fren√≥ la innovaci√≥n. Surgi√≥ la Web 2.0 a mediados de la d√©cada, caracterizada por sitios interactivos y generados por usuarios. Plataformas como MySpace (2003), Facebook (2004), YouTube (2005) y Twitter (2006) transformaron Internet en un medio social y participativo. La revoluci√≥n m√≥vil comenz√≥ realmente con el lanzamiento del iPhone en 2007, que democratiz√≥ el acceso a Internet desde dispositivos m√≥viles. Esto fue seguido por el desarrollo del sistema operativo Android y la proliferaci√≥n de smartphones. El concepto de "Internet de las Cosas" (IoT) comenz√≥ a materializarse con dispositivos dom√©sticos inteligentes, wearables y sensores conectados. La d√©cada de 2010 vio el surgimiento de la computaci√≥n en la nube con servicios como Amazon Web Services, la popularizaci√≥n de las redes sociales m√≥viles, el auge del comercio electr√≥nico m√≥vil, y el desarrollo de tecnolog√≠as como la realidad virtual y aumentada. M√°s recientemente, la inteligencia artificial, el machine learning, la tecnolog√≠a blockchain y las criptomonedas han redefinido las posibilidades de Internet.

El n√∫mero de dispositivos conectados se ha incrementado exponencialmente, pasando de millones en los 90 a miles de millones en la actualidad, marcando el desarrollo de nuevas tecnolog√≠as como 5G para soportar el creciente n√∫mero de dispositivos. En la @fig-ni-history-grow pod√©is apreciar c√≥mo se han ido incrementando exponencialmente, y esta tendencia est√° lejos de revertirse. Las redes sociales, herramientas de teletrabajo, VoIP y videollamadas, inteligencia artificial, streaming de video, realidad virtual y aumentada, y otras muchas aplicaciones hacen que no solo se incremente el n√∫mero de dispositivos conectados, sino tambi√©n las necesidades de ancho de banda y tiempos de respuesta cada vez m√°s exigentes.

::: {#fig-ni-history-grow}
```{mermaid}
%%| fig-height: 3s
xychart-beta
    title "Dispositivos Conectados a Internet por D√©cada (Log‚ÇÅ‚ÇÄ)"
    x-axis ["1970s", "1980s", "1990s", "2000s", "2010s", "2020s"]
    y-axis "Log‚ÇÅ‚ÇÄ (N√∫mero de dispositivos)" 0 --> 12
    bar [0.6, 2.3, 4.5, 9.0, 10.1, 11.7]
```
N√∫mero de dispositivos conectados por d√©cada desde ARPANET hasta Internet en 2025 [@ourworldindata2023internet;@iotanalytics2020statista].
:::


En conclusi√≥n, la evoluci√≥n de Internet (ver resumen en la @fig-ni-history-timeline) desde sus or√≠genes militares como ARPANET hasta convertirse en la infraestructura global actual ilustra una transformaci√≥n extraordinaria que ha redefinido la sociedad moderna. Lo que comenz√≥ en 1969 como una red experimental de 4 hosts dise√±ada para resistir ataques nucleares, se ha convertido en un ecosistema interconectado de miles de millones de dispositivos. En los siguientes apartados veremos en detalle en detalle la tecnolog√≠a que sustenta Internet y obtendremos el conocimiento necesario para poder realizar aplicaciones y juegos en red.


::: {#fig-ni-history-timeline}
```{mermaid}
%%| fig-width: 6s
timeline
    title Evoluci√≥n de Internet: De ARPANET a la Era Digital
    
    section Era ARPANET (1969-1983)
        1969 : Nace ARPANET
             : 4 nodos iniciales (UCLA, Stanford, UC Santa B√°rbara, Utah)
             : Implementaci√≥n de conmutaci√≥n de paquetes
        
        1973 : Primera conexi√≥n internacional
        
        1983 : Adopci√≥n oficial de TCP/IP
             : Divisi√≥n de ARPANET (creaci√≥n de MILNET)
             : Nace el t√©rmino "Internet"

    section Nacimiento de la Web (1989-1995)
        1989-1990 : Tim Berners-Lee inventa la World Wide Web
                  : Desarrollo de HTTP, HTML y URLs
        
        1991 : Primer sitio web p√∫blico

    section Era Comercial (1995-2000)
        1995 : Eliminaci√≥n de restricciones comerciales
             : Primeros ISPs comerciales (AOL)
             : Aparecen Amazon y eBay
        
        1998 : Fundaci√≥n de Google
        
        2000-2001 : Explosi√≥n de la burbuja punto-com

    section Web 2.0 y Redes Sociales (2003-2010)
        2003-2006 : Redes sociales
        2007 : Lanzamiento del iPhone

    section Era Moderna (2010-2025)
        2010s : Computaci√≥n en la nube, Internet de las cosas
        
        2020s : Inteligencia Artificial
              : Tecnolog√≠a 5G

```
Esquema de tiempo de los eventos m√°s significativos desde la creaci√≥n de ARPANET hasta 2025.
:::

## Infraestructura de la red y tecnolog√≠as de transmisi√≥n
En los cap√≠tulos anteriores hemos visto una peque√±a introducci√≥n a Internet y sus componentes. Ahora pasaremos a ver brevemente la parte f√≠sica (Hardware) de la Internet antes de ver la parte Software en los siguientes cap√≠tulos. En la @fig-ni-infra-net tenemos un ejemplo de diagrama donde se muestran los componentes de la red y parte de la taxonom√≠a que veremos en este cap√≠tulo.

![Red simplificada¬†[@kurose2017computer].](resources/network_image.png){#fig-ni-infra-net}

Empezando por la parte m√°s externa, vamos a hablar de los sistemas terminales ("end systems"). De forma simplificada, podr√≠amos decir que estos son los sistemas que utilizan la Internet, y que el resto de componentes son los que sustentan la red. En esta categor√≠a tendr√≠amos los ordenadores, smartphones, dispositivos inteligentes.. es decir, los componentes conectados. En la jerga de Internet estos componentes se conocen como "host", por que son los que tienen aplicaciones que funcionan sobre internet. Estos dispositivos se pueden conectar a la red a trav√©s de diferentes tecnolog√≠as que veremos posteriormente en este cap√≠tulo como WiFi o 5g. Los hosts, dependiendo de su uso, tambi√©n se pueden clasificar como clientes y servidores. Los servidores generalmente ofrecen un servicio que los clientes utilizan. Por ejemplo, cuando hablamos por Whatsapp, nuestro tel√©fono y el tel√©fono destino son clientes, y los "ordenadores" de Whatsapp que ofrecen el servidor son servidores. Esto no es clasificaci√≥n est√°tica y fija, y un cliente puede actuar de servidor tambi√©n. Este tipo de clasificaci√≥n la veremos en m√°s detalle en el @appl.

Movi√©ndonos a la capa m√°s interna tenemos las redes de acceso ("access network"). Las redes de acceso es la red en la cual se conecta un host con el router (tambi√©n conocido router de borde, o ingl√©s "edge router") en el camino hacia el n√∫cleo de la red (core network). El router de borde junto a los hosts tambi√©n forman parte de lo que se denomina el borde de la red ("edge of the network"). Siguiendo con los ejemplos anteriores, cuando nos conectados a Internet por WiFi/Ethernet en nuestra casa, universidad, etc, nos conectamos al "router", que ser√≠a el router de borde. 

Aqu√≠ merece la pena hacer una aclaraci√≥n t√©cnica sobre el "router" dom√©stico del ejemplo anterior. En realidad, estos dispositivos son equipos multifunci√≥n que integran varias tecnolog√≠as: un switch para la red local, un router para el enrutamiento entre redes, y t√≠picamente un punto de acceso WiFi. Cuando nos conectamos por cable o WiFi, t√©cnicamente nos conectamos primero al switch integrado, y cuando la comunicaci√≥n debe salir hacia Internet, el componente router se encarga del enrutamiento hacia otras redes. Aunque en el uso cotidiano llamamos "router" a todo el dispositivo, es importante entender que internamente realiza m√∫ltiples funciones de red.

En el router dom√©stico, o router de borde, tenemos dos tipos de conexiones principales: la conexi√≥n con los hosts y la conexi√≥n con el siguiente router. Vamos a ver brevemente los tipos de tecnolog√≠a para cada caso. Empezando por la conexi√≥n host-router, tenemos dos tipos principalmente: conexi√≥n cableada tipo Ethernet y conexi√≥n inal√°mbrica WiFi. En la @tab-ni-infra-host-edge pod√©is ver una comparativa de sus principales caracter√≠sticas.

::: {#tab-ni-infra-host-edge}
| Tecnolog√≠a | Medio F√≠sico | Tipo Conexi√≥n | Simetr√≠a | Velocidad T√≠pica | Alcance | Estado 2025 |
|------------|---------------|---------------|----------|------------------|---------|--------------|
| **WiFi 6** | Radio 2.4/5/6 GHz | Compartida | Sim√©trica* | 200-400 Mb/s | 30-50 m | Est√°ndar |
| **Ethernet** | Par trenzado | Dedicada | Sim√©trica | 1000/1000 Mb/s | <100 m | Est√°ndar |
| **4G LTE** | Radio m√≥vil | Compartida | Asim√©trica | 50/15 Mb/s | Varios km | Estable |
| **5G** | Radio m√≥vil | Compartida | Asim√©trica | 300/50 Mb/s | 1-5 km | En despliegue |

Tabla comparativa de tecnolog√≠as de acceso host-router. *Sim√©trica en teor√≠a, asim√©trica en la pr√°ctica.
:::

WiFi 6 es una tecnolog√≠a de acceso inal√°mbrico, es decir, no requiere una conexi√≥n f√≠sica entre los dispositivos. Como contrapartida a la flexibilidad de no tener el v√≠nculo f√≠sico, el alcance se ve reducido. La m√°xima distancia entre el router y el dispositivo es t√≠picamente de 30-50 metros, pero puede verse reducida por obst√°culos entre ambos. Los est√°ndares WiFi van desde el original 802.11 hasta el m√°s moderno 802.11ax (WiFi 6E), que es capaz de alcanzar velocidades te√≥ricas de hasta 9.6 Gb/s mediante m√∫ltiples antenas y t√©cnicas avanzadas. Adem√°s, en las √∫ltimas versiones se ha incrementado el ancho de banda disponible, incluyendo la banda de 6 GHz, proporcionando espectro adicional para reducir la congesti√≥n. La conexi√≥n mediante WiFi es sim√©trica en teor√≠a, aunque en la pr√°ctica las velocidades pueden variar seg√∫n las condiciones del entorno, y del hardware del router y del host. Una de las principales desventajas de los medios inal√°mbricos es que el medio de transmisi√≥n es compartido entre todos los dispositivos, lo que puede causar problemas de congesti√≥n cuando hay muchos dispositivos conectados simult√°neamente.

Por otra parte, tenemos el acceso tipo Ethernet, que se realiza mediante un cable f√≠sico de par trenzado (que explicaremos m√°s adelante). En este caso, el alcance se extiende hasta algo menos de 100 metros. Al ser una conexi√≥n f√≠sica, generalmente no importa qu√© obst√°culos haya entre ambos puntos[^ethernet_interference]. Algunas personas han intentado empalmar cables para lograr longitudes superiores a 100 metros, pero esto no funciona adecuadamente. Las causas principales son la degradaci√≥n de la se√±al y que los protocolos Ethernet est√°n dise√±ados asumiendo tiempos espec√≠ficos de propagaci√≥n en el cable[^degradation_ethernet]. Al ser un tipo de conexi√≥n dedicada, cuando nos conectamos por cable no tenemos problemas de congesti√≥n del medio de transmisi√≥n. Las velocidades est√°ndar actuales suelen ser de 1000 Mb/s (Gigabit Ethernet), aunque existen est√°ndares m√°s r√°pidos como 10 Gigabit Ethernet.

Finalmente, tenemos las tecnolog√≠as de acceso m√≥vil como alternativa de conectividad. Tanto **4G LTE** como **5G** utilizan ondas de radio en el espectro m√≥vil licenciado para conectar dispositivos con las torres de telefon√≠a, que act√∫an como puntos de acceso a la red del operador. Su principal ventaja es el amplio alcance (varios kil√≥metros para 4G, 1-5 km para 5G seg√∫n la banda), lo que las hace ideales para ubicaciones sin infraestructura fija o como backup de conectividad. Ambas tecnolog√≠as son asim√©tricas y utilizan un medio compartido, con 4G LTE ofreciendo velocidades t√≠picas de 50/15 Mb/s y 5G alcanzando hasta 300/50 Mb/s en condiciones reales. El 5G representa una evoluci√≥n significativa al usar un espectro m√°s amplio, incluyendo frecuencias milim√©tricas, aunque presenta un compromiso entre velocidad y alcance: las frecuencias m√°s altas proporcionan mayor velocidad pero menor penetraci√≥n. Mientras 4G LTE est√° completamente desplegado, 5G se encuentra en fase de despliegue activo con cobertura variable seg√∫n ubicaci√≥n y operador[^mobile_tech].

[^mobile_tech]: El rendimiento de ambas tecnolog√≠as puede degradarse significativamente en √°reas de alta densidad poblacional o durante horas pico debido a la congesti√≥n del medio compartido.

[^ethernet_interference]: T√©cnicamente s√≠ pueden afectar ciertos factores, por ejemplo, campos magn√©ticos intensos o interferencias electromagn√©ticas sobre el cable Ethernet.

[^degradation_ethernet]: La resistencia del cable se incrementa linealmente con la distancia, aumenta la probabilidad de interferencias electromagn√©ticas, y se degrada la relaci√≥n se√±al-ruido, entre otros factores.

Ahora pasaremos a la conexi√≥n del router de borde con el siguiente router. Las tecnolog√≠as disponibles

::: {#tab-ni-infra-edge-core}
| Tecnolog√≠a | Medio F√≠sico | Tipo Conexi√≥n | Simetr√≠a | Velocidad T√≠pica | Alcance | Estado 2025 |
|------------|---------------|---------------|----------|------------------|---------|--------------|
| **Dial-up** | Par trenzado | Dedicada | Sim√©trica | 56 kb/s | Ilimitado* | Obsoleta |
| **DSL/VDSL** | Par trenzado | Dedicada | Asim√©trica | 50/15 Mb/s | <3 km de central | En declive |
| **Cable HFC** | Coaxial/Fibra | Compartida | Asim√©trica | 300/30 Mb/s | Red local | Estable |
| **FTTH PON** | Fibra √≥ptica | Compartida | Sim√©trica | 1000/1000 Mb/s | <20 km | En expansi√≥n |
| **FTTH P2P** | Fibra √≥ptica | Dedicada | Sim√©trica | 10000/10000 Mb/s | <40 km | Premium |
| **Satelital** | Microondas | Compartida | Asim√©trica | 100/20 Mb/s | Global | Nicho |

:::

Para la conexi√≥n entre el router de borde y el siguiente router en la jerarqu√≠a de red, disponemos de diversas **tecnolog√≠as WAN** (Wide Area Network) que han evolucionado significativamente. Las tecnolog√≠as m√°s tradicionales como **Dial-up** (56 kb/s) est√°n obsoletas, mientras que **DSL/VDSL** (50/15 Mb/s t√≠picas) se encuentran en declive debido a sus limitaciones de distancia (<3 km de la central telef√≥nica) y asimetr√≠a inherente del par trenzado. El **Cable HFC** (Hybrid Fiber-Coaxial) ofrece velocidades superiores (300/30 Mb/s) mediante una combinaci√≥n de fibra √≥ptica hasta el vecindario y cable coaxial hasta el hogar, aunque mantiene asimetr√≠a y medio compartido. Las tecnolog√≠as de **fibra √≥ptica** representan el estado del arte: **FTTH PON** (Fiber-to-the-Home Passive Optical Network) proporciona 1000/1000 Mb/s sim√©tricos con medio compartido y est√° en expansi√≥n activa, mientras que **FTTH P2P** (Point-to-Point) ofrece conexiones dedicadas de hasta 10000/10000 Mb/s para aplicaciones premium. Como alternativa para ubicaciones remotas, la **conectividad satelital** proporciona cobertura global con velocidades de 100/20 Mb/s, aunque con mayor latencia y asimetr√≠a, ocupando un nicho espec√≠fico donde otras tecnolog√≠as no son viables.

Finalmente, llegamos a la √∫ltima capa, denominada el n√∫cleo de la red. El n√∫cleo de la red es una compleja jerarqu√≠a de redes interconectadas que trabajan conjuntamente para proporcionar conectividad global. Por contextualizar las tres partes de la red mencionadas hasta ahora vamos a ver un ejemplo. Sup√≥n que una persona A (host) env√≠a un mensaje (carta) a otra persona B (otro host). La persona A deposita la carta en correos, que ser√≠a el router de frontera. Todo el proceso del envio de la carta desde correos (router de frontera de A) hasta llegar al buz√≥n de B (router de frontera de B) ser√≠a el n√∫cleo de la red.

Despu√©s de haber ejemplificado su estructura, vamos a indagar en c√≥mo est√° estructurado el n√∫cleo de la red. Primeramente hablaremos de su estructura, que comentamos en la introducci√≥n tiene una estructura descentralizada, lo que permite que el sistema sea mas robusto y escalable. Los componentes de esta red que nos proporcionan interconexi√≥n con otras redes se denominan ISP (provedores de seervicio de Internet, del ingl√©s "Internet Service Providers"). Los ISPs se organiza en tres niveles, cada uno con caracter√≠sticas y roles espec√≠ficos en el ecosistema global de conectividad.

Los proveedores de Nivel 1 forman la elite de Internet, operando las redes troncales globales de m√°s alta capacidad. Estas organizaciones incluyen empresas como cogent, AT&T, Verizo, TeliaSonera y Telef√≥nica. Los provedores TIER 1 mantienne infraestructuras que abarcan continentes enteros con enlaces de 10-100 Gb/s y routers de rendimiento extremo capaces de procesar millones de paquetes por segundo. Entre los provedores ISP Tier 1 se pueden mandar mensaje sin costo alguno mediante acuerdos de "peering" gratuito. Esto mantiene la exclusividad del estatus Tier 1, ya que se deben alcanzar acuerdos con todos los Tier 1 existentes antes de ser considerado Tier 1.

Los ISP de Nivel 2 operan redes regionales o nacionales m√°s peque√±as que se conectan a Internet a trav√©s de uno o m√°s proveedores Tier 1. Pagan a los Tier 1 por "tr√°nsito" - el servicio de llevar su tr√°fico a destinos que no pueden alcanzar directamente. Sin embargo, los Tier 2 tambi√©n establecen conexiones directas entre s√≠ cuando es mutuamente beneficioso, reduciendo los costos de tr√°nsito y mejorando el rendimiento para rutas comunes. Estos proveedores sirven como el tejido conectivo esencial de Internet, agregando tr√°fico de numerosos proveedores m√°s peque√±os y proporcionando redundancia y rutas alternativas. Su posici√≥n intermedia les permite ofrecer servicios especializados y soporte m√°s personalizado que los grandes Tier 1, mientras mantienen conexiones globales a trav√©s de sus relaciones de tr√°nsito.

Los ISP de Nivel 3 son los proveedores de acceso que conectan directamente a usuarios finales - hogares, peque√±as empresas, y organizaciones locales. Estos proveedores compran conectividad a Internet de ISP de niveles superiores y generalmente no mantienen conexiones directas entre s√≠. Su valor radica en el conocimiento local, servicio personalizado, y la infraestructura de "√∫ltima milla" que lleva Internet directamente a los usuarios finales.


```{mermaid}
%%| fig-width: 6s
graph TD
    subgraph "Tier 1 ISPs"
        T1A["Tier 1 ISP A<br/>Global Backbone"]
        T1B["Tier 1 ISP B<br/>Global Backbone"]
        T1C["Tier 1 ISP C<br/>Global Backbone"]
    end
    
    subgraph "Tier 2 ISPs"
        T2A["Tier 2 ISP A<br/>Regional Provider"]
        T2B["Tier 2 ISP B<br/>Regional Provider"]
        T2C["Tier 2 ISP C<br/>Regional Provider"]
        T2D["Tier 2 ISP D<br/>Regional Provider"]
    end
    
    subgraph "Tier 3 ISPs"
        T3A["Tier 3 ISP A<br/>Local Provider"]
        T3B["Tier 3 ISP B<br/>Local Provider"]
        T3C["Tier 3 ISP C<br/>Local Provider"]
        T3D["Tier 3 ISP D<br/>Local Provider"]
        T3E["Tier 3 ISP E<br/>Local Provider"]
        T3F["Tier 3 ISP F<br/>Local Provider"]
    end
    
    %% Tier 1 peering relationships (free exchange)
    T1A -.->|"Free Peering"| T1B
    T1B -.->|"Free Peering"| T1C
    T1A -.->|"Free Peering"| T1C
    
    %% Tier 2 purchasing transit from Tier 1
    T1A -->|"Transit (Paid)"| T2A
    T1A -->|"Transit (Paid)"| T2B
    T1B -->|"Transit (Paid)"| T2C
    T1C -->|"Transit (Paid)"| T2D
    
    %% Tier 2 peering with other Tier 2
    T2A -.->|"Peering"| T2C
    T2B -.->|"Peering"| T2D
    
    %% Tier 3 purchasing transit from Tier 2
    T2A -->|"Transit (Paid)"| T3A
    T2A -->|"Transit (Paid)"| T3B
    T2B -->|"Transit (Paid)"| T3C
    T2C -->|"Transit (Paid)"| T3D
    T2D -->|"Transit (Paid)"| T3E
    T2D -->|"Transit (Paid)"| T3F
    
    %% Styling
    classDef tier1 fill:#ff6b6b,stroke:#d63031,stroke-width:3px,color:#fff
    classDef tier2 fill:#4ecdc4,stroke:#00b894,stroke-width:2px,color:#fff
    classDef tier3 fill:#fdcb6e,stroke:#e17055,stroke-width:2px,color:#2d3436
    
    class T1A,T1B,T1C tier1
    class T2A,T2B,T2C,T2D tier2
    class T3A,T3B,T3C,T3D,T3E,T3F tier3
```

## Modelos de Referencia de Redes {#intro-network-stacks}
Una vez visto la parte m√°s hardware de Internet, vamos a pasar a introducir la parte software. En concreto, vamos a hablar de como se estructura la parte software de la comunicaci√≥n en red. Primero, vamos a introducir dos conceptos software muy importantes: Las arquitecturas por capas ("Layered architectures") y la encapsulaci√≥n.

Las arquitecturas por capas es una forma de estructurar una aplicaci√≥n software en capas (componentes) donde cada capa tiene una responsabilidad espec√≠fica y bien definida. Cada capa proporciona servicios a la capa superior y utiliza los servicios de la capa inferior, creando una jerarqu√≠a organizada. Esta organizaci√≥n permite que cada capa se pueda desarrollar, modificar y mantener de forma independiente, siempre que mantenga la misma interfaz con las capas adyacentes.

En el contexto de las redes de comunicaci√≥n, esta aproximaci√≥n arquitect√≥nica es fundamental porque permite dividir la complejidad de la comunicaci√≥n en red en problemas m√°s peque√±os y manejables. Por ejemplo, una capa puede encargarse √∫nicamente del enrutamiento de datos, mientras que otra se ocupa exclusivamente de la detecci√≥n y correcci√≥n de errores. Esta separaci√≥n de responsabilidades hace que el sistema sea m√°s modular, escalable y f√°cil de debuggear.

::: {.callout-tip}
# Encapsulaci√≥n
La encapsulaci√≥n, por su parte, es el proceso mediante el cual cada capa a√±ade su propia informaci√≥n de control (headers) a los datos que recibe de la capa superior, creando una nueva unidad de datos que pasa a la capa inferior. De esta manera, cada capa trata los datos de las capas superiores como una carga √∫til (payload) a la que simplemente a√±ade su propia informaci√≥n de control, sin necesidad de entender o modificar el contenido interno de esos datos.
:::

Bajo estos dos conceptos se definen los dos modelos m√°s importantes: el modelo OSI y el modelo TCP/IP. En la @fig-ni-stacks-tcposi podemos ver los modelos OSI y TCP/IP divididos en sus diferentes capas y cu√°l es la equivalencia entre ambos.

![Modelos OSI y TCP/IP.](resources/tcp_osi.svg){#fig-ni-stacks-tcposi}


El modelo OSI, desarrollado por la Organizaci√≥n Internacional de Normalizaci√≥n (ISO) en 1984, es un modelo conceptual de siete capas que describe c√≥mo diferentes sistemas de red pueden comunicarse entre s√≠. El modelo TCP/IP, tambi√©n conocido como modelo de Internet, es el modelo pr√°ctico utilizado en Internet, desarrollado por DARPA con cuatro capas que corresponden aproximadamente a las capas OSI, pero con una estructura m√°s simple y pr√°ctica. Aunque en la pr√°ctica se usa m√°s el modelo TCP/IP, OSI sigue siendo fundamental para entender los principios de las comunicaciones de red. A continuaci√≥n, explicamos cada nivel de funcionalidad, mostrando c√≥mo se mapean entre ambos modelos:

**Nivel de Aplicaci√≥n**
OSI: Capas 7, 6 y 5 (Aplicaci√≥n, Presentaci√≥n y Sesi√≥n)
TCP/IP: Capa de Aplicaci√≥n

En el modelo OSI, este nivel se divide en tres capas separadas, mientras que TCP/IP las agrupa en una sola capa m√°s pr√°ctica:

- Funcionalidad de Aplicaci√≥n (OSI Capa 7): Es la capa m√°s cercana al usuario final. Aqu√≠ residen las aplicaciones de red como navegadores web (HTTP/HTTPS), clientes de correo electr√≥nico (SMTP, POP3, IMAP), transferencia de archivos (FTP) y servicios de nombres de dominio (DNS). Esta capa proporciona servicios directamente a las aplicaciones del usuario.
- Funcionalidad de Presentaci√≥n (OSI Capa 6): Se encarga de la traducci√≥n, cifrado y compresi√≥n de datos. Convierte los datos del formato de aplicaci√≥n al formato de red y viceversa. Maneja diferentes representaciones de datos (ASCII, EBCDIC), cifrado/descifrado y compresi√≥n/descompresi√≥n.
- Funcionalidad de Sesi√≥n (OSI Capa 5): Establece, mantiene y termina las sesiones de comunicaci√≥n entre aplicaciones. Controla los di√°logos/conexiones entre ordenadores, implementa checkpoints para recuperaci√≥n en caso de fallo y gestiona el control de acceso.

En TCP/IP, todas estas funcionalidades est√°n integradas en la Capa de Aplicaci√≥n, que incluye protocolos como HTTP/HTTPS para web, SMTP para correo electr√≥nico, FTP para transferencia de archivos, DNS para resoluci√≥n de nombres, y muchos otros que proporcionan servicios directos a los usuarios. Esta aproximaci√≥n m√°s pr√°ctica evita la complejidad de separar artificialmente funciones que a menudo est√°n estrechamente relacionadas.

**Nivel de Transporte**
OSI: Capa 4 (Transporte)
TCP/IP: Capa de Transporte
Este nivel es pr√°cticamente id√©ntico en ambos modelos. Proporciona transferencia de datos confiable entre sistemas finales, maneja el control de flujo, la correcci√≥n de errores y la segmentaci√≥n/reensamblado de datos.

Los protocolos principales son:
- TCP (Transmission Control Protocol): Ofrece comunicaci√≥n confiable con control de flujo, correcci√≥n de errores y garant√≠a de entrega ordenada
- UDP (User Datagram Protocol): Ofrece comunicaci√≥n r√°pida pero sin garant√≠as de entrega, ideal para aplicaciones en tiempo real

**Nivel de Red/Internet**
OSI: Capa 3 (Red)
TCP/IP: Capa de Internet

Ambos modelos manejan esta funcionalidad de manera muy similar. Se encarga del enrutamiento de paquetes a trav√©s de m√∫ltiples redes, determinando la mejor ruta para enviar datos desde el origen hasta el destino. El protocolo principal es IP (Internet Protocol), junto con protocolos auxiliares como:
- ICMP: Para mensajes de control y error
- ARP: Para resoluci√≥n de direcciones (en TCP/IP)
- Protocolos de enrutamiento: Como OSPF y BGP

**Nivel de Acceso F√≠sico**
OSI: Capas 2 y 1 (Enlace de Datos y F√≠sica)
TCP/IP: Capa de Acceso a la Red

El modelo OSI separa estas funciones en dos capas distintas, mientras que TCP/IP las combina por practicidad:
- Funcionalidad de Enlace de Datos (OSI Capa 2): Proporciona transferencia de datos libre de errores entre nodos adyacentes. Se divide en dos subcapas: LLC (Logical Link Control) y MAC (Media Access Control). Maneja la detecci√≥n y correcci√≥n de errores a nivel de enlace y controla el acceso al medio f√≠sico.
- Funcionalidad F√≠sica (OSI Capa 1): Define las caracter√≠sticas el√©ctricas, mec√°nicas y funcionales para activar, mantener y desactivar el enlace f√≠sico. Especifica voltajes, velocidades de datos, conectores y otros aspectos del medio de transmisi√≥n (cable, fibra √≥ptica, radio).

En TCP/IP, la Capa de Acceso a la Red combina ambas funcionalidades, encarg√°ndose de la transmisi√≥n de datos en la red local espec√≠fica, incluyendo tecnologias como Ethernet, WiFi, y otros protocolos de acceso al medio.

**Diferencias Clave Entre los Modelos**

- Complejidad: OSI tiene 7 capas vs 4 en TCP/IP, siendo OSI m√°s detallado te√≥ricamente pero TCP/IP m√°s pr√°ctico.
- Uso real: TCP/IP es el modelo usado en Internet, mientras que OSI es principalmente un modelo de referencia educativo.
- Flexibilidad: TCP/IP agrupa funcionalidades relacionadas, evitando separaciones artificiales que raramente se implementan por separado en la pr√°ctica.
- Evoluci√≥n: TCP/IP evolucion√≥ con Internet, mientras que OSI fue dise√±ado como est√°ndar te√≥rico antes de su implementaci√≥n masiva.

## Rendimiento
Por √∫ltimo, vamos a cerrar esta introducci√≥n a las redes de telecomunicaciones describiendo brevemente los factores presentes en su rendimiento. Primero, vamos a conceptualizarlo con un ejemplo simplificado. Supongamos que la red de telecomunicaci√≥n es una carretera entre dos puntos y los paquetes son los veh√≠culos. ¬øC√≥mo podr√≠amos medir el rendimiento de este sistema? Las dos m√©tricas m√°s sencillas ser√≠an el tiempo en recorrer la carretera y la cantidad de veh√≠culos que pueden circular a la vez. La primera m√©trica se conoce como latencia, y est√° influenciada en nuestro ejemplo por la velocidad del medio, y la segunda se conoce como el tasa de transferencia efectiva (throughput), que ser√≠a el n√∫mero de carriles de las carreteras. El objetivo, bajo estas dos m√©tricas, ser√≠a que los veh√≠culos fueran lo m√°s r√°pido posible aprovechando todos los carriles, consiguiendo que el n√∫mero de veh√≠culos que llega sea lo m√°s alto posible.

El ejemplo es muy simple, pero nos ha ayudado a introducir dos conceptos clave, la latencia y el throughput. En este cap√≠tulo veremos cu√°les son los principales factores que influyen en estos dos conceptos cuando en lugar de tener una carretera, tenemos varias carreteras con conexiones entre ellas y no todos los veh√≠culos van al mismo sitio. Las conexiones entre las carreteras, es decir, las redes, se realiza a trav√©s de routers como hemos comentado en los cap√≠tulos anteriores.

Primero, nos vamos a centrar en el throughput, que es la cantidad de datos real que podemos transmitir por unidad de tiempo. Generalmente se mide en Mb/s o Gb/s. El throughput a veces se mide de manera instant√°nea pero tambi√©n se puede considerar como media de un periodo de tiempo. El throughput est√° limitado por el componente m√°s "lento" en el camino entre dos puntos. Por ejemplo, si estamos descargando informaci√≥n y el medio tiene un throughput de 1Gb/s pero el servidor solo es capaz de proporcionar 100Mb/s, el throughput resultante ser√° 100Mb/s.

Un t√©rmino asociado al throughput es el ancho de banda (bandwidth). El bandwidth es la capacidad m√°xima te√≥rica del canal de comunicaci√≥n, es decir, la cantidad m√°xima de datos que puede transmitir por unidad de tiempo en condiciones ideales. Es decir, es el l√≠mite f√≠sico. Por otra parte, el throughput como dijimos es la cantidad real que obtenemos condiciones reales.

::: {.callout-note}
Es importante no confundir MB/s con Mb/s (u otros pares como GB/s con Gb/s). En inform√°tica se suele hablar en MB/s, es decir, MegaBytes por segundo, mientras que en telecomunicaciones se suele hablar en Mb/s. Es una diferencia importante ya que un MB/s es 8 veces m√°s velocidad que un Mb/s.
:::

Ahora pasaremos a la latencia de red, y los factores que la definen.  La latencia es el tiempo total que tarda un paquete en viajar desde el origen hasta el destino. Esta latencia no se mide √∫nicamente con el tiempo te√≥rico de propagaci√≥n por el medio, sino que es la suma de varios factores. Primero nos enfocaremos en los factores que afectan a un √∫nico paquete:

- **Retardo de procesamiento** ($d_{proc}$): El retardo de procesamiento es el tiempo que tarda un router en procesar el paquete. Esto incluye, comprobar la integridad del paquete (checksum), determinar cu√°l es el siguiente salto y otros procesos adicionales del protocolo. En los routers modernos este proceso normalmente es de microsegundos en condiciones normales, pero puede incrementarse en caso de congesti√≥n o pol√≠ticas adicionales. Este procesamiento se lleva a cabo en hardware especializado (ASICs), pero en determinadas circunstancias es posible que sea necesario inspeccionar el paquete mediante software, como por ejemplo en Deep Packet Inspection, que se suele utilizar para monitorizar la red por seguridad o para forzar pol√≠ticas [1].

- **Retardo de cola** ($d_{queue}$): El retardo de cola ocurre una vez se ha procesado el paquete con su correspondiente retardo de procesamiento. En este momento, el paquete es colocado en un buffer con la informaci√≥n necesaria para determinar el siguiente salto. El retardo de cola es el tiempo que tarda el paquete en ser enviado al siguiente salto. Si hay poco tr√°fico, el retardo de cola ser√° casi nulo, en cambio, si hay mucho tr√°fico este retardo crecer√° considerablemente.

- **Retardo de propagaci√≥n** ($d_{prop}$): El retardo de propagaci√≥n es el tiempo que tarda en viajar un paquete por el medio, como puede ser la fibra √≥ptica o 5G, o generalmente, una combinaci√≥n de varias, ya que de un punto a otro puede haber diferentes medios. El retardo, por lo tanto, es la suma de los retardos de cada uno de los medios. El retardo de un medio, se calcula como $d/s$, donde d es la longitud del medio y s es la velocidad del medio. Por contextualizar con datos las velocidades de los medios, la fibra √≥ptica y el cable coaxial tienen una velocidad (en promedio) de aproximadamente el 67% de la velocidad de la luz y en el 5G la velocidad de la luz [2]. Este retardo est√° limitado por las leyes de la f√≠sica.

Estos factores afectan a un √∫nico paquete, pero generalmente cuando enviamos algo es demasiado grande como para entrar en un paquete y se divide en varios paquetes, que posteriormente se recomponen en el destino. Por lo tanto, tenemos otro tipo de retardo, que tiene en cuenta la cantidad de informaci√≥n que queremos enviar:

- **Retardo de transmisi√≥n** ($d_{trans}$): Este retardo est√° determinado por la longitud de la informaci√≥n que queremos enviar (L) y la velocidad del enlace (R), es decir, $L/R$. Generalmente este retardo es predecible y constante, pero puede variar significativamente entre tecnolog√≠as de red. La velocidad del enlace es el throughput.

Una vez definidos todos los factores, podemos expresar el retardo total como:

$d_{total} = d_{proc} + d_{queue} + d_{prop} + d_{trans}$

Vamos a ver un ejemplo "real" de retardo comparando dos enlaces, uno con fibra y otro con 5G. Haremos la comparaci√≥n hasta el primer router (router de borde) incluido:

- **Retardo de propagaci√≥n**: Como comentamos previamente, el 5G se propaga a la velocidad de la luz y la fibra aproximadamente al 67% de la velocidad de la luz. Por lo tanto, el 5G es m√°s r√°pido.
- **Retardo de procesamiento**: En 5G tenemos retardo debido a la estaci√≥n de radio, la decodificaci√≥n y la gesti√≥n de los recursos de radio (aproximadamente unos 4ms) [4]. En cambio, en la fibra este proceso es mucho m√°s r√°pido, necesitando aproximadamente unos 0.1ms por salto. La fibra suele ser mucho m√°s r√°pida.
- **Retardo de cola**: A una estaci√≥n suele haber conectados cientos de dispositivos, puede haber interferencias y adem√°s tambi√©n suelen ser dependientes del clima. Un ejemplo de esto lo podr√©is haber vivido cuando est√°is en un concierto con miles de personas y no funciona bien la conexi√≥n debido a la congesti√≥n. En el caso de la fibra √≥ptica suele haber menos congesti√≥n, el n√∫mero de usuarios es predecible y los sistemas cuentan con buffers m√°s grandes y eficientes.
- **Retardo de transmisi√≥n**: El throughput en 5G es inferior a 1Gb/s, mientras que en fibra pueden llegar actualmente a 10 Gb/s.

::: {.callout-note title="Latencia vs Throughput"}
La latencia mide cu√°nto tiempo tarda en llegar la informaci√≥n y el throughput mide cu√°nta informaci√≥n puede viajar simult√°neamente por el canal de comunicaci√≥n. Volviendo al ejemplo de la carretera: la latencia ser√≠a el tiempo que tarda un veh√≠culo en recorrer toda la carretera de extremo a extremo, mientras que el throughput ser√≠a la cantidad total de veh√≠culos que pueden pasar por la carretera en un periodo determinado (relacionado con el n√∫mero de carriles y la densidad de tr√°fico).
:::

Un concepto asociado a la latencia de suma importancia en las aplicaciones en red, especialmente los juegos interactivos es el jitter. Cuando enviamos varios paquetes podemos calcular una latencia promedio, ya que no todos los paquetes tardar√°n lo mismo debido a las condiciones de red y diferentes rutas. En aplicaciones altamente interactivas tener una latencia promedio baja es indispensable. Sin embargo, considera este peque√±o ejemplo donde se envian 4 paquetes. 

- Escenario 1: Los paquetes tardan 50ms, 52ms, 48ms, 51ms
- Escenario 2: Los paquetes tardan 28ms, 68ms, 43ms, 62ms.

En ambos escenarios los paquetes tienen una latencia promedio de 50.25ms. Sin embargo, la variaci√≥n entre los paquetes es elevada. En el primer caso, la variaci√≥n es de 1.48ms mientras que en el segundo es de 15.82ms. Esta variabilidad se conoce como jitter. Un jitter alto puede ocasionar voz entrecortada o saltos en videoconferencias o degradaci√≥n de la calidad en videojuegos. En el caso de los videojuegos, se suelen utilizar buffers para realizar interpolaciones de los elementos de red y as√≠ tener un juego m√°s fluido.

Finalmente, vamos a ver un √∫ltimo factor que no se ajusta a los anteriores. Hasta ahora hemos asumido que todos los paquetes que enviamos llegan correctamente a su destinatario. Pero esto no es siempre cierto. Por ejemplo, si un router est√° congestionado y tiene su buffer lleno, descartar√° los paquetes. Si un paquete se corrompe debido a alteraciones (e.g., campos electromagn√©ticos, radiaci√≥n solar[^cosmic_radiation]) un router de tr√°nsito lo podr√° descartar. Esto forma parte del protocolo de internet. Otros protocolos, en capas superiores como por ejemplo TCP, tienen en cuenta estas situaciones y reenv√≠an el paquete cuando determinan que no ha llegado a su destino.

**Aplicaciones Pr√°cticas: Videojuegos**
Cuando estamos dise√±ando aplicaciones en red tenemos que tener en cuenta estos retardos, pues pueden hacer nuestra aplicaci√≥n inutilizable. En el caso de los videojuegos, los requisitos de retardo m√°ximo vendr√°n dados dependiendo del tipo de juego, por ejemplo @claypool2006latency:

- Real-Time Strategy (RTS): Tolerancia media (100-200ms) debido a su naturaleza estrat√©gica.
- Turn-Based Games: Tolerancia alta (500ms+) debido a que los turnos son discretos.
- First-Person Shooters (FPS): Baja tolerancia (20-50ms) para juegos competitivos.
- Fighting Games: Tolerancia muy baja (1-3 frames, ~16-50ms).
- Racing Games: Tolerancia baja o moderada (50-100ms) dependiendo del realismo.
- MMORPGs: Tolerancia variable dependiendo de la actividad, por ejemplo combates vs social.

Estos tiempos se miden en \acr{RTT}, que involucra el tiempo entre que se manda el mensaje, se procesa en el servidor, y obtenemos la respuesta de vuelta en el cliente.


[^cosmic_radiation]:  La radiaci√≥n c√≥smica produce cambios de bits en dispositivos electr√≥nicos, que se denominan SEU (Single Event Upset). Estos cambios suelen afectar a las DRAM, SRAM y ASICs. Contrario a la intuici√≥n, es algo relativamente frecuente, y ocurre con una tasa aproximada de 1 error por cada 256MB por d√≠a a nivel del mar [6]. Cuanto m√°s altitud (o dicho de otra forma, m√°s cerca del espacio), esta tasa se incrementa considerablemente. A nivel de red esto suele ocurrir en los routers.
